import boto3
import pymysql
import json
import random
import string
import timerds-db-1.cklt0stdp27j.us-east-1.rds.amazonaws.com

# Connection details for the database
host = 'your_database_host'
port = 3306
username = 'your_username'
password = 'your_password'
database_name = 'your_database_name'
table_name = 't_lambda_poc_output'

def get_max_run_id():
    # Connect to the database
    connection = pymysql.connect(host=host, port=port, user=username, password=password, database=database_name)

    try:
        # Get the max value from the RUN_ID column
        with connection.cursor() as cursor:
            cursor.execute(f"SELECT MAX(RUN_ID) FROM {table_name}")
            result = cursor.fetchone()[0]
        
        # Set the run_id variable based on the max value
        run_id = result + 1 if result is not None else 0

    finally:
        # Close the connection
        connection.close()
    
    return run_id

def handler(event, context):
    # Extract the number of repetitions from the event
    repetitions = event['repetitions']
    
    # Get the max value from the RUN_ID column
    run_id = get_max_run_id()
    
    # Generate a unique identifier for the batch with a timestamp
    batch_id = ''.join(random.choices(string.ascii_uppercase + string.digits, k=5))
    timestamp = str(int(time.time()))
    batch_number = f'{batch_id}_{timestamp}'
    
    # Create the iterable JSON
    iterable_json = json.dumps(list(range(repetitions)))
    
    # Prepare the output
    output = {'run_id': run_id, 'iterable_json': iterable_json}
    
    # Return the response with statusCode 200 and the output body
    return {
        'statusCode': 200,
        'body': output
    }
